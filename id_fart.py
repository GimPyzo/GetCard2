import os
import random
import time
import asyncio
from datetime import datetime, timedelta
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
BOT_TOKEN = os.environ['TELEGRAM_BOT_TOKEN']

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
YOUR_USER_ID = 5195824376  # –í–∞—à Telegram ID
TARGET_CHAT_ID = None  # –ë—É–¥–µ—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
BOT_USERNAME = "Gimart_bot"  # –Æ–∑–µ—Ä–Ω–µ–π–º –≤–∞—à–µ–≥–æ –±–æ—Ç–∞

user_cooldowns = {}
card_phrases = [
    "—Ö—É–π–Ω—è –∫–∞—Ä—Ç–∞ 0/10",
    "–Ω–æ—Ä–º –∫–∞—Ä—Ç–∞ 5/10",
    "–∏–º–±–∞ –∫–∞—Ä—Ç–∞ 10/0 –∞–π–≥–∏–∑ –æ—Ü–µ–Ω–∏—Ç"
]

# –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á–∏ –∞–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∏
auto_send_task = None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "/getcard –ø—Ä–æ–ø–∏—à–∏ –µ–ø—Ç–∞"
    )

async def get_id(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID —á–∞—Ç–∞"""
    chat_id = update.effective_chat.id
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —á–∞—Ç–∞ –¥–ª—è –∞–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∏
    global TARGET_CHAT_ID
    TARGET_CHAT_ID = chat_id
    
    await update.message.reply_text(
        parse_mode='Markdown'
    )
    
    print(f"–£—Å–ª—ã—à–∞–ª —Ç–µ–±—è, –±—Ä–∞–¥–∫–∞ –≤–æ—Ç —Ç–µ —Ü–∏—Ñ—Ä—ã: {chat_id}")

async def set_chat(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç –¥–ª—è –∞–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∏"""
    global TARGET_CHAT_ID
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    if update.effective_user.id != YOUR_USER_ID:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞")
        return
    
    TARGET_CHAT_ID = update.effective_chat.id
    chat_title = update.effective_chat.title or "—ç—Ç–æ—Ç —á–∞—Ç"
    
    await update.message.reply_text(
        f"üè∑Ô∏è –≠—Ç–æ—Ç —á–∞—Ç–∏–∫: {chat_title}"
        parse_mode='Markdown'
    )

async def getcard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    current_time = time.time()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—É–ª–¥–∞—É–Ω–∞
    if user_id in user_cooldowns:
        time_passed = current_time - user_cooldowns[user_id]
        if time_passed < 60:
            remaining = int(60 - time_passed)
            await update.message.reply_text(f" –ñ–î–ò–ò–ò–ò {remaining} —Å–µ–∫.")
            return

    # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç—É
    user_cooldowns[user_id] = current_time
    random_phrase = random.choice(card_phrases)
    await update.message.reply_text(f"üé¥ {random_phrase}")

async def autosend_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞"""
    global auto_send_task, TARGET_CHAT_ID
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    if update.effective_user.id != YOUR_USER_ID:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞")
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ ID —á–∞—Ç–∞
    if not TARGET_CHAT_ID:
        await update.message.reply_text(
            "‚ùå ID —á–∞—Ç–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!\n"
            "–î–æ–±–∞–≤—å—Ç–µ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø—É –∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:\n"
            "/set_chat - —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–æ—Ç —á–∞—Ç\n"
            "/getid - —É–∑–Ω–∞—Ç—å ID —á–∞—Ç–∞"
        )
        return
    
    if auto_send_task and not auto_send_task.done():
        await update.message.reply_text("‚úÖ –ê–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–∂–µ –∑–∞–ø—É—â–µ–Ω–∞")
        return
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É
    auto_send_task = asyncio.create_task(auto_send_loop(context))
    await update.message.reply_text(
        parse_mode='Markdown'
    )

async def autosend_stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏"""
    global auto_send_task
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞
    if update.effective_user.id != YOUR_USER_ID:
        await update.message.reply_text("‚ùå –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞ –±–æ—Ç–∞")
        return
    
    if auto_send_task and not auto_send_task.done():
        auto_send_task.cancel()
        await update.message.reply_text("üõë –ê–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    else:
        await update.message.reply_text("‚ÑπÔ∏è –ê–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–µ –±—ã–ª–∞ –∑–∞–ø—É—â–µ–Ω–∞")

async def auto_send_loop(context: ContextTypes.DEFAULT_TYPE):
    """–¶–∏–∫–ª –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –∫–∞–∂–¥—ã–µ 3 —á–∞—Å–∞"""
    global TARGET_CHAT_ID
    
    try:
        while True:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¢–û–õ–¨–ö–û –∫–æ–º–∞–Ω–¥—É /getcard@F_CardBot
            await context.bot.send_message(
                chat_id=TARGET_CHAT_ID,
                text="/getcard@F_CardBot"
            )
            
            next_time = datetime.now() + timedelta(hours=3)
            print(f"/getcard@F_CardBot")
            # –ñ–¥–µ–º 3 —á–∞—Å–∞ (10800 —Å–µ–∫—É–Ω–¥)
            await asyncio.sleep(10800)
            
    except asyncio.CancelledError:
        print("üõë –ê–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ –∞–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–µ: {e}")

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("getcard", getcard))
    application.add_handler(CommandHandler("getid", get_id))
    application.add_handler(CommandHandler("set_chat", set_chat))
    application.add_handler(CommandHandler("autosend_start", autosend_start))
    application.add_handler(CommandHandler("autosend_stop", autosend_stop))
    
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    print(f"üë§ –í–∞—à ID: {YOUR_USER_ID}")
    print("üéØ –ë–æ—Ç –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å: /getcard@F_CardBot")
    print("üÜî –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /getid –≤ –≥—Ä—É–ø–ø–µ —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å ID")
    print("‚è∞ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /set_chat –∑–∞—Ç–µ–º /autosend_start –¥–ª—è –∞–≤—Ç–æ-–æ—Ç–ø—Ä–∞–≤–∫–∏")
    
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()

