import os
import random
import time
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
BOT_TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Ç–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω
if not BOT_TOKEN:
    print("‚ùå –û–®–ò–ë–ö–ê: TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ!")
    print("üìù –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Ñ–∞–π–ª .env —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç:")
    print("   TELEGRAM_BOT_TOKEN=–≤–∞—à_—Ç–æ–∫–µ–Ω")
    exit(1)

user_cooldowns = {}
card_phrases = [
    "—Ö—É–π–Ω—è –∫–∞—Ä—Ç–∞ 0/10",
    "–Ω–æ—Ä–º –∫–∞—Ä—Ç–∞ 5/10", 
    "–∏–º–±–∞ –∫–∞—Ä—Ç–∞ 10/0 –∞–π–≥–∏–∑ –æ—Ü–µ–Ω–∏—Ç"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üéÆ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ò—Å–ø–æ–ª—å–∑—É–π /getcard")

async def getcard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    current_time = time.time()

    if user_id in user_cooldowns:
        time_passed = current_time - user_cooldowns[user_id]
        if time_passed < 60:
            remaining = int(60 - time_passed)
            await update.message.reply_text(f"‚è≥ –ö—É–ª–¥–∞—É–Ω! –ñ–¥–∏ {remaining} —Å–µ–∫.")
            return

    user_cooldowns[user_id] = current_time
    random_phrase = random.choice(card_phrases)
    await update.message.reply_text(f"üé¥ {random_phrase}")

def main():
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("getcard", getcard))
    
    print("‚úÖ –¢–æ–∫–µ–Ω –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Replit!")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()

