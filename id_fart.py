import os
import random
import time
import asyncio
from flask import Flask
from threading import Thread
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# –í–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
app = Flask('')

@app.route('/')
def home():
    return "–∏ –≤–æ—Å—Å—Ç–∞–ª–∏ –º–∞—à–∏–Ω—ã –∏–∑ –ø–µ–ø–ª–∞ —è–¥–µ—Ä–Ω–æ–≥–æ –æ–≥–Ω—è"

def run_web():
    app.run(host='0.0.0.0', port=8080)

def keep_alive():
    t = Thread(target=run_web)
    t.start()

# –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
BOT_TOKEN = os.environ['BOT_TOKEN']

user_cooldowns = {}
card_phrases = [
    "—Ö—É–π–Ω—è –∫–∞—Ä—Ç–∞ 0/10",
    "–Ω–æ—Ä–º –∫–∞—Ä—Ç–∞ 5/10",
    "–∏–º–±–∞ –∫–∞—Ä—Ç–∞ 10/0 –∞–π–≥–∏–∑ –æ—Ü–µ–Ω–∏—Ç"
]

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("/getcard –ø—Ä–æ–ø–∏—à–∏—Ç–µ –¥–∞—É–Ω—ã")

async def getcard(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    current_time = time.time()

    if user_id in user_cooldowns:
        time_passed = current_time - user_cooldowns[user_id]
        if time_passed < 60:
            remaining = int(60 - time_passed)
            await update.message.reply_text(f"–ö–£–õ–î–ê–ê–£–ù–ù–ù {remaining} —Å–µ–∫.")
            return

    user_cooldowns[user_id] = current_time
    random_phrase = random.choice(card_phrases)
    await update.message.reply_text(f"üé¥ {random_phrase}")

def main():
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    keep_alive()
    
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±–æ—Ç–∞
    application = Application.builder().token(BOT_TOKEN).build()
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("getcard", getcard))
    
    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –Ω–∞ Replit!")
    print("üåê Keep-alive —Å–µ—Ä–≤–µ—Ä –∞–∫—Ç–∏–≤–µ–Ω")
    application.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()


